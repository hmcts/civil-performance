#!groovy

properties([
        pipelineTriggers([cron('H 08 * * 1-5')])
])

@Library("Infrastructure") _

def product = "civil"
def component = "ucmc-performance"
def fail = 0

//WORKS - retry(){ }

//def rerunOnFirstFail() {
    //def fails = 0
    //def stop = 0
    //def b = currentBuild.previousBuild

    //while (b != null && stop == 0) {
    //    if (b.result == 'FAILURE') {
    //        fails = fails + 1
    //    } else {
    //        stop = 1
    //    }
    //    b = b.previousBuild
    //}

    //fails = fails + 1
    //mail(
    //        to: 'yogesh.ruperai@hmcts.net',
    //        subject: "performanceTest Failed",
    //        body: "This is a test message"
            //body: "This test has failed ${fails} times this week"
    //)
    //slackSend(
    //        channel: 'yogesh.ruperai@hmcts.net',
    //        message: "This is a test message"
    //)
//}

pipeline {
    agent none
    stages {
        stage('Gatling Test') {
            steps {
                script {
                    retry(1) {
                        withNightlyPipeline("java", product, component) {
                            enablePerformanceTest()
                            after('performanceTest') {
                                steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
                            }
                        }
                    }
                }
            }
        }
    }
    post {
        always {
            script {
                echo "YR: This is from outside the block"
                slackSend(
                        channel: 'yogesh.ruperai@hmcts.net',
                        color: 'warning',
                        message: "Hello"
                )
                //mail to: 'yogesh.ruperai@hmcts.net', subject: 'Failed Test', body: 'Fix the test'
            }
        }
    }
}




//retry(2) {
//    withNightlyPipeline("java", product, component) {
//
//        enablePerformanceTest(40)

//        after('performanceTest') {
//            steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
//        }

        //afterFailure('performanceTest') {
        //    echo "Starting After Step"
        //    steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
        //    withNightlyPipeline("java", product, component) {
        //        enablePerformanceTest()
        //        after('performanceTest') {
        //            steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
        //        }
        //    }
        //}
//    }
//}