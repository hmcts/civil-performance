#!groovy

properties([
        pipelineTriggers([cron('H 08 * * 1-5')])
])

@Library("Infrastructure@jenkins-alerts-poc")

def product = "civil"
def component = "ucmc-performance"

withNightlyPipeline("java", product, component) {

    enablePerformanceTest(40, true, false)

    after('performanceTest') {
        steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
    }
}


//pipeline {
//    agent none
//    stages {
//        stage('Gatling Test') {
//            steps {
//                script {
//                    retry(2) {
//                        withNightlyPipeline("java", product, component) {
//                            enablePerformanceTest(40)
//                            after('performanceTest') {
//                                steps.archiveArtifacts allowEmptyArchive: true, artifacts: 'functional-output/**/*'
//                            }
//                        }
//                    }
//                }
//            }
//        }
//    }
//    post {
//        always {
//            script {
//                def testFailed = checkIfGatlingTestFailedThenReport("${slackUserID}")
//                if (testFailed == false) {
//                    checkIfGatlingTestFailedIntermitentlyThenReport("${slackUserID}", 10)
//                }
//            }
//        }
//    }
//}